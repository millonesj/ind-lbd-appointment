service: ind-appointment

frameworkVersion: '4'

plugins:
  - serverless-iam-roles-per-function
  - serverless-offline

provider:
  name: aws
  runtime: nodejs20.x
  region: us-east-1
  memorySize: 512
  timeout: 15
  environment:
    DYNAMO_REGION: ${env:DYNAMO_REGION}
    APPOINTMENTS_TABLE: AppointmentsTable
    SNS_TOPIC_ARN: 
      Ref: AppointmentTopic

  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:Query
        - sns:Publish
      Resource: "*"

functions:
  appointment:
    handler: dist/serverless.handler
    events:
      - http:
          path: appointment
          method: post
      - http:
          path: appointment/{insuredId}
          method: get
      - http:
          path: /{proxy+}
          method: any

resources:
  Resources:

    ## DynamoDB Table
    AppointmentsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: AppointmentsTable
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
          - AttributeName: insuredId
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        GlobalSecondaryIndexes:
          - IndexName: insuredId-index
            KeySchema:
              - AttributeName: insuredId
                KeyType: HASH
            Projection:
              ProjectionType: ALL
        BillingMode: PAY_PER_REQUEST

    ## SNS Topic
    AppointmentTopic:
      Type: AWS::SNS::Topic
      Properties:
        TopicName: AppointmentTopic

    ## SQS Queues
    SQSPEQueue:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: SQS_PE

    ## SNS Subscription to SQS_PE (con filtro por pa√≠s)
    SNSSubscriptionPE:
      Type: AWS::SNS::Subscription
      Properties:
        TopicArn:
          Ref: AppointmentTopic
        Protocol: sqs
        Endpoint:
          Fn::GetAtt: [SQSPEQueue, Arn]
        FilterPolicy:
          countryISO:
            - PE

  Outputs:
    AppointmentApi:
      Description: "API Gateway endpoint URL"
      Value:
        Fn::Join:
          - ""
          - - "https://"
            - Ref: ApiGatewayRestApi
            - ".execute-api.${self:provider.region}.amazonaws.com/${sls:stage}/"
package:
  individually: true
  excludeDevDependencies: true
  exclude:
    - node_modules/@types/**
    - node_modules/aws-sdk/**
    - node_modules/typescript/**